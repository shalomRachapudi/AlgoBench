/***********************************************************************************
 *  AlgoBench is a learning aid directed at students taking the Inf2B course to
 *  better understand the theoretical concepts, experiment with algorithms using 
 *  various inputs, and interpret the results.
 * 
 *  Copyright (C) 2017  Shalom <shalomray7@gmail.com>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  version 2 any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ************************************************************************************
 *  This program's developed as part of MSc project, University of Edinburgh (2017)
 *  Project: AlgoBench
 *  Supervisor: Kyriakos Kalorkoti
 *  School: School of Informatics
 *  Previous Contributor(s): None
 ***********************************************************************************/

package inf2b.algobench.ui.components;

import inf2b.algobench.util.ITreeSubPanel;

public class TreeTaskSubPanel extends javax.swing.JPanel implements ITreeSubPanel {

    /**
     * Creates new form TreeTaskSubPanel
     */
    public TreeTaskSubPanel() {
        initComponents();
    }
    
    /* The following methods are for Tree Information (check TreeTaskSubPanel GUI) */
    @Override
    public void setTreeType(String treeType)
    {
        String tree = null;
        if (treeType.equals("0"))
            tree = "Random Valued Tree";
        else if (treeType.equals("1"))
            tree = "Left Skewed Tree";
        else if (treeType.equals("2"))
            tree = "Right Skewed Tree";
        jLabelBSTType.setText(tree);
    }
    
    @Override
    public void setTreeRange(String range)
    {
        jLabelBSTRange.setText(range);
    }
    
    @Override
    public void setNumberOfNodes(String numNodes)
    {
        jLabelBSTNodes.setText(numNodes);
    }
    
    @Override
    public void setTreeHeight(String height)
    {
        jLabelBSTHeight.setText(height);
    }
    
    @Override
    public void setTotalMemoryFootprint(String memory)
    {
        jLabelBSTTotalMemUsage.setText(memory);
    }
    
    @Override
    public void setMemoryPerNode(String memoryPerNode)
    {
        jLabelMemUsagePerNode.setText(memoryPerNode);
    }
    
    /* The following methods are for Basic Operations */
    @Override
    public void setDataElement(String dataElement)
    {
        jLabelDataElement.setText(dataElement);
    }
    
    @Override
    public void setNodeLevel(String nodeLevel)
    {
        jLabelNodeLevel.setText(nodeLevel);
    }
    
    @Override
    public void setInsertionTimeTaken(String timeTaken)
    {
        jLabelInsertionTime.setText(timeTaken);
    }
    
    @Override
    public void setDeletionTimeTaken(String timeTaken)
    {
        jLabelDeletionTime.setText(timeTaken);
    }
    
    @Override
    public void setPercentageCompleted(String percentage)
    {
        jLabelPercentageCompleted.setText(percentage + " %");
    }
    
    @Override
    public void setSearchTimeTaken(String timeTaken)
    {
        jLabelSearchTime.setText(timeTaken);
    }
    
    @Override
    public void setMemoryUsageOp(String memory)
    {
        jLabelMemUsageOp.setText(memory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTree = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabelBSTNodes = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelBSTHeight = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelBSTType = new javax.swing.JLabel();
        jLabelLimitsLabel = new javax.swing.JLabel();
        jLabelPercentageCompleted = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelBSTRange = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabelBSTTotalMemUsage = new javax.swing.JLabel();
        jLabelLimitsLabel2 = new javax.swing.JLabel();
        jLabelMemUsagePerNode = new javax.swing.JLabel();
        jPanelTreeOperations = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabelInsertionTime = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelSearchTime = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelDataElement = new javax.swing.JLabel();
        jLabelLimitsLabel1 = new javax.swing.JLabel();
        jLabelMemUsageOp = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabelNodeLevel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabelDeletionTime = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.GridLayout(1, 0));

        jPanelTree.setBorder(javax.swing.BorderFactory.createTitledBorder("Binary Search Tree Information"));
        jPanelTree.setOpaque(false);
        jPanelTree.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(jLabel4.getFont().deriveFont((float)13));
        jLabel4.setText("Number of Nodes:");
        jPanelTree.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 110, 200, 20));

        jLabelBSTNodes.setFont(jLabelBSTNodes.getFont().deriveFont((float)13));
        jLabelBSTNodes.setText("NA");
        jLabelBSTNodes.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelBSTNodes.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelBSTNodes.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTree.add(jLabelBSTNodes, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 110, 130, 20));

        jLabel5.setFont(jLabel5.getFont().deriveFont((float)13));
        jLabel5.setText("Height of the Tree:");
        jPanelTree.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 145, 200, 20));

        jLabelBSTHeight.setFont(jLabelBSTHeight.getFont().deriveFont((float)13));
        jLabelBSTHeight.setText("NA");
        jLabelBSTHeight.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelBSTHeight.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelBSTHeight.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTree.add(jLabelBSTHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 145, 130, 20));

        jLabel7.setFont(jLabel7.getFont().deriveFont((float)13));
        jLabel7.setText("Type of BST:");
        jPanelTree.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 40, 200, 20));

        jLabelBSTType.setFont(jLabelBSTType.getFont().deriveFont((float)13));
        jLabelBSTType.setText("NA");
        jLabelBSTType.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelBSTType.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelBSTType.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTree.add(jLabelBSTType, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 40, 130, 20));

        jLabelLimitsLabel.setFont(jLabelLimitsLabel.getFont().deriveFont((float)13));
        jLabelLimitsLabel.setText("Memory Alloc. to Node (approx.):");
        jPanelTree.add(jLabelLimitsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 215, 200, 20));

        jLabelPercentageCompleted.setFont(jLabelPercentageCompleted.getFont().deriveFont((float)13));
        jLabelPercentageCompleted.setText("NA");
        jLabelPercentageCompleted.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelPercentageCompleted.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelPercentageCompleted.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTree.add(jLabelPercentageCompleted, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 250, 130, 20));

        jLabel8.setFont(jLabel8.getFont().deriveFont((float)13));
        jLabel8.setText("Range of BST:");
        jLabel8.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel8.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanelTree.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 75, 200, 20));

        jLabelBSTRange.setFont(jLabelBSTRange.getFont().deriveFont((float)13));
        jLabelBSTRange.setText("NA");
        jLabelBSTRange.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelBSTRange.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelBSTRange.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTree.add(jLabelBSTRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 75, 130, 20));

        jLabel18.setFont(jLabel18.getFont().deriveFont((float)13));
        jLabel18.setText("Total Memory Footprint (approx.):");
        jPanelTree.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 180, 200, 20));

        jLabelBSTTotalMemUsage.setFont(jLabelBSTTotalMemUsage.getFont().deriveFont(jLabelBSTTotalMemUsage.getFont().getStyle() & ~java.awt.Font.BOLD, 13));
        jLabelBSTTotalMemUsage.setForeground(new java.awt.Color(255, 0, 51));
        jLabelBSTTotalMemUsage.setText("NA");
        jPanelTree.add(jLabelBSTTotalMemUsage, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 180, 130, 20));

        jLabelLimitsLabel2.setFont(jLabelLimitsLabel2.getFont().deriveFont((float)13));
        jLabelLimitsLabel2.setText("Percentage Completed:");
        jPanelTree.add(jLabelLimitsLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 250, 200, 20));

        jLabelMemUsagePerNode.setFont(jLabelMemUsagePerNode.getFont().deriveFont((float)13));
        jLabelMemUsagePerNode.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelMemUsagePerNode.setText("NA");
        jLabelMemUsagePerNode.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelMemUsagePerNode.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelMemUsagePerNode.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTree.add(jLabelMemUsagePerNode, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 215, 130, 20));

        add(jPanelTree);

        jPanelTreeOperations.setBorder(javax.swing.BorderFactory.createTitledBorder("Basic Operations"));
        jPanelTreeOperations.setOpaque(false);
        jPanelTreeOperations.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(jLabel10.getFont().deriveFont((float)13));
        jLabel10.setText("Time taken for insert():");
        jPanelTreeOperations.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 110, 200, 20));

        jLabelInsertionTime.setFont(jLabelInsertionTime.getFont().deriveFont((float)13));
        jLabelInsertionTime.setText("NA");
        jLabelInsertionTime.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelInsertionTime.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelInsertionTime.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTreeOperations.add(jLabelInsertionTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 110, 130, 20));

        jLabel11.setFont(jLabel11.getFont().deriveFont((float)13));
        jLabel11.setText("Time taken for search():");
        jPanelTreeOperations.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 145, 200, 20));

        jLabelSearchTime.setFont(jLabelSearchTime.getFont().deriveFont((float)13));
        jLabelSearchTime.setText("NA");
        jLabelSearchTime.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelSearchTime.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelSearchTime.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTreeOperations.add(jLabelSearchTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 145, 130, 20));

        jLabel12.setFont(jLabel12.getFont().deriveFont((float)13));
        jLabel12.setText("Data Element:");
        jPanelTreeOperations.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 40, 200, 20));

        jLabelDataElement.setFont(jLabelDataElement.getFont().deriveFont((float)13));
        jLabelDataElement.setText("NA");
        jLabelDataElement.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelDataElement.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelDataElement.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTreeOperations.add(jLabelDataElement, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 40, 130, 20));

        jLabelLimitsLabel1.setFont(jLabelLimitsLabel1.getFont().deriveFont((float)13));
        jLabelLimitsLabel1.setText("Memory Footprint (approx.):");
        jPanelTreeOperations.add(jLabelLimitsLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 215, 200, 20));

        jLabelMemUsageOp.setFont(jLabelMemUsageOp.getFont().deriveFont((float)13));
        jLabelMemUsageOp.setText("NA");
        jLabelMemUsageOp.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelMemUsageOp.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelMemUsageOp.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTreeOperations.add(jLabelMemUsageOp, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 215, 130, 20));

        jLabel13.setFont(jLabel13.getFont().deriveFont((float)13));
        jLabel13.setText("Node Level:");
        jLabel13.setMaximumSize(new java.awt.Dimension(150, 20));
        jLabel13.setMinimumSize(new java.awt.Dimension(150, 20));
        jLabel13.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanelTreeOperations.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 75, 200, 20));

        jLabelNodeLevel.setFont(jLabelNodeLevel.getFont().deriveFont((float)13));
        jLabelNodeLevel.setText("NA");
        jLabelNodeLevel.setMaximumSize(new java.awt.Dimension(12, 16));
        jLabelNodeLevel.setMinimumSize(new java.awt.Dimension(12, 16));
        jLabelNodeLevel.setPreferredSize(new java.awt.Dimension(12, 16));
        jPanelTreeOperations.add(jLabelNodeLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 75, 130, 20));

        jLabel19.setFont(jLabel19.getFont().deriveFont((float)13));
        jLabel19.setText("Time taken for delete():");
        jPanelTreeOperations.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 180, 200, 20));

        jLabelDeletionTime.setFont(jLabelDeletionTime.getFont().deriveFont(jLabelDeletionTime.getFont().getStyle() & ~java.awt.Font.BOLD, 13));
        jLabelDeletionTime.setForeground(new java.awt.Color(255, 0, 51));
        jLabelDeletionTime.setText("NA");
        jPanelTreeOperations.add(jLabelDeletionTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 180, 130, 20));

        add(jPanelTreeOperations);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelBSTHeight;
    private javax.swing.JLabel jLabelBSTNodes;
    private javax.swing.JLabel jLabelBSTRange;
    private javax.swing.JLabel jLabelBSTTotalMemUsage;
    private javax.swing.JLabel jLabelBSTType;
    private javax.swing.JLabel jLabelDataElement;
    private javax.swing.JLabel jLabelDeletionTime;
    private javax.swing.JLabel jLabelInsertionTime;
    private javax.swing.JLabel jLabelLimitsLabel;
    private javax.swing.JLabel jLabelLimitsLabel1;
    private javax.swing.JLabel jLabelLimitsLabel2;
    private javax.swing.JLabel jLabelMemUsageOp;
    private javax.swing.JLabel jLabelMemUsagePerNode;
    private javax.swing.JLabel jLabelNodeLevel;
    private javax.swing.JLabel jLabelPercentageCompleted;
    private javax.swing.JLabel jLabelSearchTime;
    private javax.swing.JPanel jPanelTree;
    private javax.swing.JPanel jPanelTreeOperations;
    // End of variables declaration//GEN-END:variables

}
